Настройка основного конфигурационного файла проекта
======================================================

Основной файл конфигурации представляет из себя *XML-документ* и находится в корневой директории проекта:

``..bps/projects/<ИМЯ_ПРОЕКТА>/config.xml``

Основные параметры
---------------------
В начале документа находится описание основных параметров проекта:

.. code-block:: xml

    <xml>
        <title> Название проекта </title>
        <description> Описание проекта </description>
        <rows_on_page>30</rows_on_page>

        <roles>
            admin, role1, role2
        </roles>

        <roles_creator>admin</roles_creator>
    . . .

* ``<title>`` и ``<description>`` - содержат описание проекта, которое будет показано в каталоге проектов

* ``<rows_on_page>`` - содержит *количество* строк таблицы *Журнала проектов*, отображаемых на одной странице.

* ``<roles>`` - в этот тег следует добавить системные роли пользователей, которые будут **иметь доступ** к этому проекту

* ``<roles_creator>`` - в этот тег следует добавить системные роли пользователей, которые будут **иметь доступ к созданию** экземпляров этого проекта

Блок файлов
---------------
Далее следует описание типов файлов Проекта:

.. code-block:: xml

    . . .
    <files>
        <filegroup1 title="Группа файлов 1">
            <filetype1 title="Тип файлов 1"/>
            <filetype2 title="Тип файлов 2"/>
        </filegroup1>

        <filegroup2 title="Группа файлов 2">
            <filetype3 title="Тип файлов 3"/>
        </filegroup2>
    </files>
    . . .

Блок файлов оборачивается тегом ``<files>``, после этого следует тег группы файлов и перечисление самих типов файлов. Группы и типы файлов содержат два названия, системное *(название тега)* и отображаемое *(записывается в свойстве ``title``)*

.. attention::

    * В блоке файлов должна быть хотя бы одна группа, нельзя указать типы файлов не обернув их в тег группы

    * В группах и типах файлов (а так же в группах полей, полях документа и переходах) наличие свойства ``title`` *обязательно*, но содержимое свойства может быть пустым:  ``title=""``

Поля документа
------------------
Основная часть конфигурационного файла - это настройка полей проекта.

.. code-block:: xml

    . . .
    <document_fields_table>
        field1, field2, field3
    </document_fields_table>

    <document_fields>
        <fieldgroup1 title="Группа полей 1">

            <field1 data_type="string" title="Поле 1"/>
            <field2 data_type="textarea" title="Поле 2"/>
            <field3 data_type="email" title="Поле 3"/>
            <field4 data_type="integer" title="Поле 4"/>
            <field4 data_type="float" title="Поле 5"/>
            <field4 data_type="float" title="Поле 6"/>
            <field4 data_type="decimal" title="Поле 7"/>

            <table1 data_type="table1" title="Таблица 1">
                <field1 data_type="string" title="Поле таблицы 1"/>
            </table1>

        </fieldgroup1>
    </document_fields>
    . . .

Поля, предназначенные для вывода в **Журнале карточек** должны быть записаны в содержимое тега ``document_fields_table``

На основе конфигурационного файла "Сфера" создает таблицу в базе данных с названием Проекта и хранит там содержание полей каждого экземпляра Проекта.

Поля документа так же как и типы файлов необходимо оборачивать в группы. У полей так же как и у файлов два названия, системное *(название тега)* и отображаемое *(записывается в свойстве ``title`` )*. Системное имя поля должно быть уникальным. Помимо этого есть обязательное свойство ``data_type``, которое указывает на тип данных содержащихся в поле.

Доступны следующие опции полей:
* data_type: Тип данных
* title - Название поля
* tags: Различные признаки
** content_popup: В таблице длинный текст выводить в виде всплывающего окна
** system: Системное поле. В форму не выводится
** hidden: В форму выводится в скрытом виде и заполняется только через js
** index: К полю создается индекс базы данных. Используется для поиска

Поля документа условно делятся на категории:

.. toctree::
   :maxdepth: 1

   xml_fields/input_fields
   xml_fields/dropdown_fields
   xml_fields/table_fields
   xml_fields/property_fields

Фильтр
---------
**Фильтр** - это утилита **Журнала карточек**, которая позволяет искать экземпляры проекта по соответствию полей.

.. code-block:: xml

    <filter_fields>
        <fieldgroup1 title="Группа полей 1">

            <field1 data_type="string" title="Поле 1"/>
            <field2 data_type="textarea" title="Поле 2"/>
            <field3 data_type="email" title="Поле 3"/>

        <fieldgroup1 title="Группа полей 1">
    </filter_fields>

Описывание полей фильтра происходит по тому же принципу, что и описывание полей документа - перечисление полей в теге filter_fields.
Поля необходимо оборачивать в группы.
.. note::

    У полей фильтра также как и у полей документа есть *обязательное* свойство data_type. Оно может принимать все теже значения, что и поля документа, **кроме** table (табличное поле) и *property*

Так же для полей фильтра существуют дополнительные значения свойства data_type:

    * **integer_range** - диапазон между целыми числами
    * **date_range** - диапазон между датами
    * **float_range** - диапазон между дробными числами

Присвоение данных значений создает два поля в окне Фильтра для поиска дат или чисел в диапазоне.

:doc:`Настройка работы фильтра </customizing/bps/py_filter>`

Этапы
---------
Данный блок описывает **Этапы**, на которых может находится экземпляр (карточка) Проекта.

.. code-block:: xml

    <states>
        <draft title="Черновик"/>
        <state1 title="Этап 1"/>
        <state2 title="Этап 2"/>
        <archive title="Архив"/>
    </states>

Описание этапов происходит теле тега ``states``. Для этапа обязательны системное и отображаемое имя (свойство **title**)

.. tip::
    Название этапов **draft** *("Черновик")* и **archive** *("Архив")* являются необязательными, но рекомендуется начинать и заканчивать процесс этапами с такими названиями.

:doc:`Настройка этапов Проекта </customizing/bps/xml_states>`
